<section id="vendor-registration" class="section bg-white">
    <div class="container mx-auto px-4 text-center">
        <div class="reveal max-w-4xl mx-auto">
            <h2 class="section-title relative text-4xl lg:text-5xl font-bold pb-4 mb-8">Vendor Registration</h2>
            <div class="text-lg text-[#495057] mb-10 leading-relaxed space-y-4 text-justify">
                <p>
                    This portal offers a one-stop-solution (or comprehensive platform) for exploring various opportunities, tenders and information for operating in the Defense Sector and an opportunity to promote the capabilities of your company as well as the Indian Defense Industry to a global audience.
                </p>
                <p>
                    All the new contracts and opportunities will be listed and tendered on this platform. Entities working in or alongside the Defense and Security sector are encouraged to complete and submit the registration form.
                </p>
                <p>
                    Registration is <strong>free</strong> and your onboarding on this platform will give you potential exposure in domestic and international Defense domain.
                </p>
                <p class="mt-6 bg-gray-100 p-4 rounded-lg">
                    If you have questions about the portal or the registration process, email us at <a href="mailto:project.defense@abhyuday.in" class="text-[#2E8B57] font-semibold hover:underline">project.defense@abhyuday.in</a> or contact us at <a href="tel:+919023905038" class="text-[#2E8B57] font-semibold hover:underline">+91 90 239 05038</a>.
                </p>
            </div>
            <button id="open-vendor-modal" class="inline-block px-10 py-4 bg-[#2E8B57] text-white text-lg font-semibold rounded-md hover:bg-opacity-90 transform hover:scale-105 transition-all duration-300 shadow-lg">
                Open Vendor Registration Form
            </button>
        </div>
    </div>
</section>

<!-- Vendor Registration Modal -->
<div id="vendor-modal" class="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-[999] hidden">
    <div id="vendor-modal-content" class="bg-white w-full max-w-4xl rounded-lg shadow-2xl p-8 relative max-h-[90vh] overflow-y-auto">
        <button id="close-vendor-modal" class="absolute top-4 right-4 text-3xl text-gray-500 hover:text-black">&times;</button>
        <h3 class="text-3xl font-bold mb-6 text-center">Vendor Registration Form</h3>
        <form action="#" class="space-y-6">
            <!-- Row 1 -->
            <div class="grid sm:grid-cols-2 gap-6">
                <div>
                    <label for="company-name" class="block text-sm font-medium text-gray-700 mb-1">Company Name <span class="text-[#ff5c33]">*</span></label>
                    <input type="text" id="company-name" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                </div>
                <div>
                    <label for="org-type" class="block text-sm font-medium text-gray-700 mb-1">Organization Type <span class="text-[#ff5c33]">*</span></label>
                    <select id="org-type" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                        <option value="" disabled selected>Select Organization</option>
                        <option>Sole Proprietor</option>
                        <option>Partnership</option>
                        <option>LLP</option>
                        <option>Private</option>
                        <option>Public</option>
                        <option>PSUs</option>
                    </select>
                </div>
            </div>

            <!-- Row 2 -->
            <div class="grid sm:grid-cols-2 gap-6">
                <div>
                    <label for="vendor-email" class="block text-sm font-medium text-gray-700 mb-1">Email Address <span class="text-[#ff5c33]">*</span></label>
                    <input type="email" id="vendor-email" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                </div>
                <div>
                    <label for="mobile-number" class="block text-sm font-medium text-gray-700 mb-1">Mobile Number <span class="text-[#ff5c33]">*</span></label>
                    <div class="flex">
                        <select id="mobile-code" class="p-3 bg-gray-50 border border-r-0 border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57] max-w-[100px]"></select>
                        <input type="tel" id="mobile-number" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-r-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                    </div>
                </div>
            </div>

            <!-- Row 3 -->
            <div class="grid sm:grid-cols-2 gap-6">
                 <div>
                    <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password <span class="text-[#ff5c33]">*</span></label>
                    <input type="password" id="password" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                </div>
                <div>
                    <label for="contact-person" class="block text-sm font-medium text-gray-700 mb-1">Contact Person Name <span class="text-[#ff5c33]">*</span></label>
                    <input type="text" id="contact-person" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                </div>
            </div>

            <!-- Row 4 -->
             <div class="grid sm:grid-cols-2 gap-6">
                <div>
                    <label for="contact-email" class="block text-sm font-medium text-gray-700 mb-1">Contact Person Email <span class="text-[#ff5c33]">*</span></label>
                    <input type="email" id="contact-email" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                </div>
                <div>
                    <label for="contact-mobile" class="block text-sm font-medium text-gray-700 mb-1">Contact Person Mobile <span class="text-[#ff5c33]">*</span></label>
                    <div class="flex">
                        <select id="contact-mobile-code" class="p-3 bg-gray-50 border border-r-0 border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57] max-w-[100px]"></select>
                        <input type="tel" id="contact-mobile" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-r-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                    </div>
                </div>
            </div>

            <!-- Row 5 -->
            <div class="grid sm:grid-cols-2 gap-6">
                <div>
                    <label for="contact-designation" class="block text-sm font-medium text-gray-700 mb-1">Contact Person Designation <span class="text-[#ff5c33]">*</span></label>
                    <input type="text" id="contact-designation" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                </div>
                <div>
                    <label for="country" class="block text-sm font-medium text-gray-700 mb-1">Country <span class="text-[#ff5c33]">*</span></label>
                    <select id="country" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                        <option>Select Country</option>
                    </select>
                </div>
            </div>

            <!-- Row 6 -->
            <div class="grid sm:grid-cols-2 gap-6">
                 <div>
                    <label for="state" class="block text-sm font-medium text-gray-700 mb-1">State <span class="text-[#ff5c33]">*</span></label>
                    <select id="state" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required disabled><option>Select State</option></select>
                </div>
                <div>
                    <label for="city" class="block text-sm font-medium text-gray-700 mb-1">City <span class="text-[#ff5c33]">*</span></label>
                    <select id="city" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required disabled><option>Select City</option></select>
                </div>
            </div>
            
            <!-- Row 7 -->
            <div>
                <label for="registered-address" class="block text-sm font-medium text-gray-700 mb-1">Registered Address <span class="text-[#ff5c33]">*</span></label>
                <textarea id="registered-address" rows="3" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required></textarea>
            </div>
            
            <!-- Row 8: Multi-select container -->
            <div data-multiselect-container="vendor-reg-firm">
                <label class="block text-sm font-medium text-gray-700 mb-1">Current Vendor Registration Of The Firm</label>
                <div class="multiselect-target"></div>
            </div>
            
            <!-- Row 9 -->
             <div class="grid sm:grid-cols-2 gap-6">
                <div>
                    <label for="gst-no" class="block text-sm font-medium text-gray-700 mb-1">GST No. <span class="text-[#ff5c33]">*</span></label>
                    <input type="text" id="gst-no" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                </div>
                <div>
                    <label for="pan-no" class="block text-sm font-medium text-gray-700 mb-1">PAN No. <span class="text-[#ff5c33]">*</span></label>
                    <input type="text" id="pan-no" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required>
                </div>
            </div>
            
            <!-- Row 10: Multi-select container -->
             <div data-multiselect-container="industry-domain">
                 <label class="block text-sm font-medium text-gray-700 mb-1">Industry Domain <span class="text-[#ff5c33]">*</span></label>
                 <div class="multiselect-target"></div>
            </div>

            <!-- Row 11 -->
            <div>
                <label for="industry-subdomain" class="block text-sm font-medium text-gray-700 mb-1">Industry Sub Domain <span class="text-[#ff5c33]">*</span></label>
                <select id="industry-subdomain" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]" required disabled><option>Please Select</option></select>
            </div>

            <!-- Row 12 -->
             <div>
                <label for="website" class="block text-sm font-medium text-gray-700 mb-1">Website</label>
                <input type="url" id="website" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]">
            </div>

            <!-- Row 13 -->
            <div>
                <label for="quality-cert" class="block text-sm font-medium text-gray-700 mb-1">Quality Certification</label>
                <input type="file" id="quality-cert" class="w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-[#2E8B57]/10 file:text-[#2E8B57] hover:file:bg-[#2E8B57]/20" accept=".jpg, .jpeg, .png, .pdf">
                 <p class="text-xs text-gray-500 mt-1">Only .jpg, .jpeg, .png, and .pdf files are allowed.</p>
            </div>

            <!-- Row 14 -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Have you worked directly or indirectly in Defense? <span class="text-[#ff5c33]">*</span></label>
                <div class="flex items-center gap-6">
                    <label class="flex items-center"><input type="radio" name="defense-work" class="h-4 w-4 text-[#2E8B57] focus:ring-[#2E8B57]"> <span class="ml-2">Yes</span></label>
                    <label class="flex items-center"><input type="radio" name="defense-work" class="h-4 w-4 text-[#2E8B57] focus:ring-[#2E8B57]"> <span class="ml-2">No</span></label>
                </div>
            </div>

            <!-- Row 15 -->
             <div>
                <label for="special-work-details" class="block text-sm font-medium text-gray-700 mb-1">Company’s Special Work Details</label>
                <textarea id="special-work-details" rows="4" class="w-full p-3 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#2E8B57]"></textarea>
            </div>
            
            <div class="border-t pt-6">
                 <p class="text-sm text-gray-600">Note: If you are not able to register your company by yourself, <a href="#" class="text-[#2E8B57] font-semibold hover:underline">click here</a>, so our technical team can contact you as soon as possible.</p>
            </div>

            <div class="text-right">
                <button type="submit" class="px-8 py-3 bg-[#2E8B57] text-white font-bold rounded-md hover:bg-opacity-90 transition-all duration-300">
                    Submit
                </button>
            </div>
        </form>
    </div>
</div>

<script is:inline>
    // --- MODAL SCRIPT ---
    const openModalBtn = document.getElementById('open-vendor-modal');
    const closeModalBtn = document.getElementById('close-vendor-modal');
    const modal = document.getElementById('vendor-modal');
    const modalContent = document.getElementById('vendor-modal-content');

    if (openModalBtn && modal) {
        openModalBtn.addEventListener('click', () => modal.classList.remove('hidden'));
    }
    if (closeModalBtn && modal) {
        closeModalBtn.addEventListener('click', () => modal.classList.add('hidden'));
    }
    if (modal && modalContent) {
        modal.addEventListener('click', (event) => {
            if (event.target instanceof Node && !modalContent.contains(event.target)) {
                modal.classList.add('hidden');
            }
        });
    }

    // --- DYNAMIC MULTI-SELECT COMPONENT ---
    function createMultiSelect(containerId, options, placeholder, hasOtherOption = false) {
        const wrapper = document.querySelector(`[data-multiselect-container="${containerId}"]`);
        if (!wrapper) return;
        const container = wrapper.querySelector('.multiselect-target');
        if(!container) return;

        const uniqueId = `multiselect-${containerId}`;
        const inputId = `${uniqueId}-input`;

        container.innerHTML = `
            <div class="relative">
                <div id="${uniqueId}-display" class="w-full p-2 min-h-[48px] bg-gray-50 border border-gray-300 rounded-md flex flex-wrap items-center cursor-pointer">
                    <span class="text-gray-400 px-1">${placeholder}</span>
                </div>
                <input type="hidden" id="${inputId}" name="${containerId}">
                <div id="${uniqueId}-dropdown" class="absolute z-10 w-full bg-white border border-gray-300 rounded-md mt-1 max-h-60 overflow-y-auto hidden multiselect-dropdown">
                    ${options.map(opt => `<div class="p-2 hover:bg-gray-100 cursor-pointer" data-value="${opt.value}">${opt.label}</div>`).join('')}
                </div>
                ${hasOtherOption ? `<input type="text" id="${uniqueId}-other" class="w-full p-3 mt-2 bg-gray-50 border border-gray-300 rounded-md hidden" placeholder="Please specify">` : ''}
            </div>
        `;

        const display = document.getElementById(`${uniqueId}-display`);
        const dropdown = document.getElementById(`${uniqueId}-dropdown`);
        const hiddenInput = document.getElementById(inputId);
        const otherInput = hasOtherOption ? document.getElementById(`${uniqueId}-other`) : null;

        const selectedValues = new Set();

        function updateDisplay() {
            if (!display) return;
            display.innerHTML = '';
            if (selectedValues.size === 0) {
                display.innerHTML = `<span class="text-gray-400 px-1">${placeholder}</span>`;
            } else {
                selectedValues.forEach(value => {
                    const option = options.find(opt => opt.value === value);
                    const label = option ? option.label : value;
                    const tag = document.createElement('div');
                    tag.className = 'multiselect-tag';
                    tag.textContent = label;
                    const removeBtn = document.createElement('span');
                    removeBtn.className = 'multiselect-tag-remove';
                    removeBtn.innerHTML = '&times;';
                    removeBtn.onclick = (e) => {
                        e.stopPropagation();
                        selectedValues.delete(value);
                        updateDisplay();
                        updateHiddenInput();
                        if (hasOtherOption && value === 'Others' && otherInput instanceof HTMLInputElement) {
                            otherInput.classList.add('hidden');
                        }
                    };
                    tag.appendChild(removeBtn);
                    display.appendChild(tag);
                });
            }
        }

        function updateHiddenInput() {
           if(hiddenInput instanceof HTMLInputElement) {
               hiddenInput.value = Array.from(selectedValues).join(',');
           }
        }

        if(display) {
            display.addEventListener('click', () => dropdown?.classList.toggle('hidden'));
        }
        
        dropdown?.querySelectorAll('div').forEach(option => {
            option.addEventListener('click', () => {
                const value = option.getAttribute('data-value');
                if (value) {
                    selectedValues.add(value);
                    updateDisplay();
                    updateHiddenInput();
                    dropdown.classList.add('hidden');
                    if (hasOtherOption && value === 'Others' && otherInput instanceof HTMLInputElement) {
                        otherInput.classList.remove('hidden');
                    }
                }
            });
        });
        
        document.addEventListener('click', (e) => {
             if (e.target instanceof Node && !wrapper.contains(e.target)) {
                dropdown?.classList.add('hidden');
            }
        });
    }
    
    // --- INITIALIZE MULTI-SELECTS ---
    createMultiSelect('vendor-reg-firm', [
        {value: 'Govt of India', label: 'Govt of India'},
        {value: 'State Govt', label: 'State Govt'},
        {value: 'PSUs', label: 'PSUs'},
        {value: 'Private', label: 'Private'},
        {value: 'Others', label: 'Others'}
    ], 'Select registrations', true);
    
    createMultiSelect('industry-domain', [
        {value: 'Air Conditioning Equipment', label: 'Air Conditioning Equipment'}, {value: 'Avionics', label: 'Avionics'}, {value: 'Bearings & Power Transmission', label: 'Bearings & Power Transmission'}, {value: 'Cameras & Cores', label: 'Cameras & Cores'}, {value: 'Chemical', label: 'Chemical'}, {value: 'Consultancy', label: 'Consultancy'}, {value: 'Consumable', label: 'Consumable'}, {value: 'Critical and Strategic Raw Material', label: 'Critical and Strategic Raw Material'}, {value: 'Electrical', label: 'Electrical'}, {value: 'Electronics', label: 'Electronics'}, {value: 'Fasteners', label: 'Fasteners'}, {value: 'Fire Fighting Equipment', label: 'Fire Fighting Equipment'}, {value: 'Forgings', label: 'Forgings'}, {value: 'Foundry and Castings', label: 'Foundry and Castings'}, {value: 'Hydraulics', label: 'Hydraulics'}, {value: 'Instrumentation', label: 'Instrumentation'}, {value: 'Iron & Steel', label: 'Iron & Steel'}, {value: 'Lenses', label: 'Lenses'}, {value: 'Lubricants and Oils', label: 'Lubricants and Oils'}, {value: 'Machinery', label: 'Machinery'}, {value: 'Material Handling And Packaging', label: 'Material Handling And Packaging'}, {value: 'Mechanical', label: 'Mechanical'}, {value: 'Multi Sensor Systems', label: 'Multi Sensor Systems'}, {value: 'Non Metallic', label: 'Non Metallic'}, {value: 'Paints & Coatings', label: 'Paints & Coatings'}, {value: 'Plastics', label: 'Plastics'}, {value: 'Pneumatics', label: 'Pneumatics'}, {value: 'Power-tools', label: 'Power-tools'}, {value: 'Pumps', label: 'Pumps'}, {value: 'Raw Materials/Ores', label: 'Raw Materials/Ores'}, {value: 'Rubber Items', label: 'Rubber Items'}, {value: 'Safety', label: 'Safety'}, {value: 'Service', label: 'Service'}, {value: 'Tooling And Cutting', label: 'Tooling And Cutting'}, {value: 'Welding', label: 'Welding'}, {value: 'Wires & Cables', label: 'Wires & Cables'}, {value: 'Work Contract', label: 'Work Contract'},
    ], 'Select domains');


    // --- DYNAMIC LOCATION & COUNTRY CODE SCRIPT ---
    let locationData = [];

    const countryDropdown = document.getElementById('country');
    const stateDropdown = document.getElementById('state');
    const cityDropdown = document.getElementById('city');
    const mobileCodeDropdown = document.getElementById('mobile-code');
    const contactMobileCodeDropdown = document.getElementById('contact-mobile-code');
    
    const countryCodes = ["+0", "+1", "+1242", "+1246", "+1264", "+1268", "+1284", "+1340", "+1345", "+1441", "+1473", "+1649", "+1664", "+1670", "+1671", "+1684", "+1758", "+1767", "+1784", "+1787", "+1809", "+1868", "+1869", "+1876", "+20", "+211", "+212", "+213", "+216", "+218", "+220", "+221", "+222", "+223", "+224", "+225", "+226", "+227", "+228", "+229", "+230", "+231", "+232", "+233", "+234", "+235", "+236", "+237", "+238", "+239", "+240", "+241", "+242", "+244", "+245", "+246", "+248", "+249", "+250", "+251", "+252", "+253", "+254", "+255", "+256", "+257", "+258", "+260", "+261", "+262", "+263", "+264", "+265", "+266", "+267", "+268", "+269", "+27", "+290", "+291", "+297", "+298", "+299", "+30", "+31", "+32", "+33", "+34", "+350", "+351", "+352", "+353", "+354", "+355", "+356", "+357", "+358", "+359", "+36", "+370", "+371", "+372", "+373", "+374", "+375", "+376", "+377", "+378", "+38", "+380", "+381", "+385", "+386", "+387", "+389", "+39", "+40", "+41", "+420", "+421", "+423", "+43", "+44", "+45", "+46", "+47", "+48", "+49", "+500", "+501", "+502", "+503", "+504", "+505", "+506", "+507", "+508", "+509", "+51", "+52", "+53", "+54", "+55", "+56", "+57", "+58", "+590", "+591", "+592", "+593", "+594", "+595", "+596", "+597", "+598", "+599", "+60", "+61", "+62", "+63", "+64", "+65", "+66", "+670", "+672", "+673", "+674", "+675", "+676", "+677", "+678", "+679", "+680", "+681", "+682", "+683", "+684", "+686", "+687", "+688", "+689", "+690", "+691", "+692", "+7", "+70", "+7370", "+81", "+82", "+84", "+850", "+852", "+853", "+855", "+856", "+86", "+880", "+886", "+90", "+91", "+92", "+93", "+94", "+95", "+960", "+961", "+962", "+963", "+964", "+965", "+966", "+967", "+968", "+970", "+971", "+972", "+973", "+974", "+975", "+976", "+977", "+98", "+992", "+994", "+995", "+996", "+998"];

    function populateCountryCodes() {
        if (!mobileCodeDropdown || !contactMobileCodeDropdown) return;
        let options = '';
        countryCodes.forEach(code => options += `<option>${code}</option>`);
        if(mobileCodeDropdown instanceof HTMLSelectElement) {
            mobileCodeDropdown.innerHTML = options;
            mobileCodeDropdown.value = "+91";
        }
        if(contactMobileCodeDropdown instanceof HTMLSelectElement) {
            contactMobileCodeDropdown.innerHTML = options;
            contactMobileCodeDropdown.value = "+91";
        }
    }

    async function fetchAndPopulateData() {
        if (locationData.length > 0) return; // Fetch only once
        try {
            const response = await fetch('/data/countries+states+cities.json');
            locationData = await response.json();
            
            let countryOptions = '<option value="" disabled selected>Select Country</option>';
            locationData.forEach(country => {
                countryOptions += `<option value="${country.id}">${country.name}</option>`;
            });
            if(countryDropdown) countryDropdown.innerHTML = countryOptions;

        } catch (error) {
            console.error("Error loading location data:", error);
        }
    }

    function populateStates(countryId) {
        const country = locationData.find(c => c.id == countryId);
        let stateOptions = '<option value="" disabled selected>Select State</option>';
        if (country && country.states) {
            country.states.forEach(state => {
                stateOptions += `<option value="${state.id}">${state.name}</option>`;
            });
        }
        if(stateDropdown instanceof HTMLSelectElement) {
            stateDropdown.innerHTML = stateOptions;
            stateDropdown.disabled = !(country && country.states && country.states.length > 0);
        }
        if(cityDropdown instanceof HTMLSelectElement) {
             cityDropdown.innerHTML = '<option value="" disabled selected>Select City</option>';
             cityDropdown.disabled = true;
        }
    }
    
    function populateCities(countryId, stateId) {
        const country = locationData.find(c => c.id == countryId);
        const state = country?.states.find(s => s.id == stateId);
        let cityOptions = '<option value="" disabled selected>Select City</option>';
        if (state && state.cities) {
            state.cities.forEach(city => {
                cityOptions += `<option value="${city.id}">${city.name}</option>`;
            });
        }
        if(cityDropdown instanceof HTMLSelectElement) {
            cityDropdown.innerHTML = cityOptions;
            cityDropdown.disabled = !(state && state.cities && state.cities.length > 0);
        }
    }
    
    countryDropdown?.addEventListener('change', (e) => {
        if(e.target instanceof HTMLSelectElement) populateStates(e.target.value);
    });

    stateDropdown?.addEventListener('change', (e) => {
        if(countryDropdown instanceof HTMLSelectElement && e.target instanceof HTMLSelectElement){
            const countryId = countryDropdown.value;
            populateCities(countryId, e.target.value);
        }
    });

    // Populate on modal open
    openModalBtn?.addEventListener('click', () => {
        if (locationData.length === 0) {
            fetchAndPopulateData();
        }
        populateCountryCodes();
    });
</script>

